// Targeted by JavaCPP version 1.5.11: DO NOT EDIT THIS FILE

package us.ihmc.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.llamacpp.global.llamacpp.*;


    //
    // Utils
    //

    @Properties(inherit = us.ihmc.llamacpp.LlamaCPPConfig.class)
public class ggml_backend_graph_copy extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public ggml_backend_graph_copy() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ggml_backend_graph_copy(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ggml_backend_graph_copy(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public ggml_backend_graph_copy position(long position) {
            return (ggml_backend_graph_copy)super.position(position);
        }
        @Override public ggml_backend_graph_copy getPointer(long i) {
            return new ggml_backend_graph_copy((Pointer)this).offsetAddress(i);
        }
    
        public native ggml_backend_buffer buffer(); public native ggml_backend_graph_copy buffer(ggml_backend_buffer setter);
        public native ggml_context ctx_allocated(); public native ggml_backend_graph_copy ctx_allocated(ggml_context setter);
        public native ggml_context ctx_unallocated(); public native ggml_backend_graph_copy ctx_unallocated(ggml_context setter);
        public native ggml_cgraph graph(); public native ggml_backend_graph_copy graph(ggml_cgraph setter);
    }
