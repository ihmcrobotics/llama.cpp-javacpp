// Targeted by JavaCPP version 1.5.11: DO NOT EDIT THIS FILE

package us.ihmc.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.llamacpp.global.llamacpp.*;


    // functionality supported by the device
    @Properties(inherit = us.ihmc.llamacpp.LlamaCPPConfig.class)
public class ggml_backend_dev_caps extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public ggml_backend_dev_caps() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ggml_backend_dev_caps(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ggml_backend_dev_caps(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public ggml_backend_dev_caps position(long position) {
            return (ggml_backend_dev_caps)super.position(position);
        }
        @Override public ggml_backend_dev_caps getPointer(long i) {
            return new ggml_backend_dev_caps((Pointer)this).offsetAddress(i);
        }
    
        // asynchronous operations
        public native @Cast("bool") boolean async(); public native ggml_backend_dev_caps async(boolean setter);
        // pinned host buffer
        public native @Cast("bool") boolean host_buffer(); public native ggml_backend_dev_caps host_buffer(boolean setter);
        // creating buffers from host ptr
        public native @Cast("bool") boolean buffer_from_host_ptr(); public native ggml_backend_dev_caps buffer_from_host_ptr(boolean setter);
        // event synchronization
        public native @Cast("bool") boolean events(); public native ggml_backend_dev_caps events(boolean setter);
    }
