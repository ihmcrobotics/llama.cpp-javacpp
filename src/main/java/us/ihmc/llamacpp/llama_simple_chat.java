// Targeted by JavaCPP version 1.5.11: DO NOT EDIT THIS FILE

package us.ihmc.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.llamacpp.global.llamacpp.*;


    // Simple API for chat
    @Properties(inherit = us.ihmc.llamacpp.LlamaCPPConfig.class)
public class llama_simple_chat extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public llama_simple_chat() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public llama_simple_chat(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public llama_simple_chat(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public llama_simple_chat position(long position) {
            return (llama_simple_chat)super.position(position);
        }
        @Override public llama_simple_chat getPointer(long i) {
            return new llama_simple_chat((Pointer)this).offsetAddress(i);
        }
    
        public native llama_context ctx(); public native llama_simple_chat ctx(llama_context setter);
        public native @Const llama_vocab vocab(); public native llama_simple_chat vocab(llama_vocab setter);
        public native llama_sampler smpl(); public native llama_simple_chat smpl(llama_sampler setter);
        public native llama_model model(); public native llama_simple_chat model(llama_model setter);
        public native Pointer messages(); public native llama_simple_chat messages(Pointer setter);
        public native Pointer formatted(); public native llama_simple_chat formatted(Pointer setter);
        public native int prev_len(); public native llama_simple_chat prev_len(int setter);
    }
